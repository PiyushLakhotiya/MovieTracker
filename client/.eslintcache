[{"D:\\MovieTracker\\client\\src\\index.js":"1","D:\\MovieTracker\\client\\src\\App.js":"2","D:\\MovieTracker\\client\\src\\reportWebVitals.js":"3","D:\\MovieTracker\\client\\src\\Components\\Navbar\\Navbar.js":"4","D:\\MovieTracker\\client\\src\\Components\\Cards\\Cards.js":"5","D:\\MovieTracker\\client\\src\\Components\\Cards\\Card\\Card.js":"6","D:\\MovieTracker\\client\\src\\Components\\Input\\Input.js":"7","D:\\MovieTracker\\client\\src\\Components\\AddForm\\AddForm.js":"8"},{"size":559,"mtime":1607449669505,"results":"9","hashOfConfig":"10"},{"size":639,"mtime":1607666900352,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1607330530892,"results":"12","hashOfConfig":"10"},{"size":677,"mtime":1607666731591,"results":"13","hashOfConfig":"10"},{"size":433,"mtime":1607666474149,"results":"14","hashOfConfig":"10"},{"size":1265,"mtime":1607666474147,"results":"15","hashOfConfig":"10"},{"size":843,"mtime":1607339609352,"results":"16","hashOfConfig":"10"},{"size":6308,"mtime":1607666731589,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"bafuug",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"D:\\MovieTracker\\client\\src\\index.js",[],["40","41"],"D:\\MovieTracker\\client\\src\\App.js",["42"],"import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Form1 from './Components/AddForm/AddForm';\r\n// import Form from './Containers/Form/Form';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n    <>\r\n      <Navbar/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Cards}></Route>\r\n        <Route path=\"/add\" component={Form1}></Route>\r\n      </Switch>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","D:\\MovieTracker\\client\\src\\reportWebVitals.js",[],"D:\\MovieTracker\\client\\src\\Components\\Navbar\\Navbar.js",["43"],"import React from 'react';\r\nimport classes from './Navbar.css'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\n\r\nconst navbar = props => (\r\n    <div className=\"navigation\">\r\n    <Navbar bg=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n            <Navbar.Brand >YMDb</Navbar.Brand>\r\n            <Navbar.Toggle />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className='ml-auto'>\r\n                    <Nav.Link href=\"#\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#\">About</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>\r\n    </div>\r\n\r\n)\r\n\r\nexport default navbar;","D:\\MovieTracker\\client\\src\\Components\\Cards\\Cards.js",[],"D:\\MovieTracker\\client\\src\\Components\\Cards\\Card\\Card.js",[],["44","45"],"D:\\MovieTracker\\client\\src\\Components\\Input\\Input.js",[],["46","47"],"D:\\MovieTracker\\client\\src\\Components\\AddForm\\AddForm.js",["48","49","50","51","52"],"import React , { Component } from 'react';\r\nimport {Card, Form, Button} from 'react-bootstrap'\r\nimport './AddForm.css'\r\nimport checkIcon from '../../check-circle-solid.svg'\r\n\r\nimport axios from 'axios';\r\n\r\nclass AddForm extends Component {\r\n    state = {\r\n        title: '',\r\n        type: 'movie',\r\n        category: '',\r\n        description: '',\r\n        discription: '',\r\n        url: '',\r\n        name: '',\r\n        cardsJSX: []\r\n    }\r\n\r\n    // onChangedHandler = (event, name) => {\r\n    //     this.setState(\r\n    //         { [name] : event.target.value }\r\n    //     );\r\n    // }\r\n\r\n    sendData = async (data) => {\r\n        let img = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\r\n        let name;\r\n        if(this.state.type === 'tv')\r\n            name = data.name;\r\n        else\r\n            name = data.title;\r\n        const dataObj = {\r\n            title: name,\r\n            description: data.overview,\r\n            category: this.state.category,\r\n            type: this.state.type,\r\n            title_id: data.id,\r\n            poster: img\r\n        }\r\n        await axios.post('http://localhost:5000/post', dataObj)\r\n            .then((data) => console.log(data))\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let a = encodeURI(this.state.title)\r\n        let apiUrl = `https://api.themoviedb.org/3/search/${this.state.type}?api_key=da6c65cb9b8595562d8ed2df20cec5cd&language=en-US&page=1&query=${a}&include_adult=false`\r\n         await axios.get(apiUrl)\r\n            .then(res => {\r\n                     let cardsJSX = res.data.results.map(data => {\r\n                        let img = `https://image.tmdb.org/t/p/w500${data.poster_path}`;\r\n                        return (\r\n                                data.poster_path ? \r\n                                (\r\n                                    <div className=\"col-12 col-md-3\" key={data.id}> \r\n                                        <a onClick={() => this.sendData(data)}>\r\n                                            <div className=\"b-game-card\" >\r\n                                                <img className=\"b-game-card__cover\" src={img}/>\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                ) : null\r\n                        );\r\n                    })\r\n                    this.setState({cardsJSX: [...cardsJSX]})\r\n        }).catch(err => console.log(\"error is \" ,err))\r\n    }   \r\n    render() {\r\n            \r\n        let img = `https://image.tmdb.org/t/p/w500${this.state.url}`;\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"addForm mt-5\">\r\n               <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        {/* <Form.Label>Type</Form.Label> */}\r\n                        <Form.Control as=\"select\" size=\"md\" onChange={(event) => this.setState({type: event.target.value})}>\r\n                            <option value=\"movie\">Movie</option>\r\n                            <option value=\"tv\">TV Show/Series</option>\r\n                            <option>Anime</option>\r\n                        </Form.Control>\r\n                    </Form.Group> \r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        {/* <Form.Label>Title</Form.Label> */}\r\n                        <Form.Control type=\"text\" placeholder=\"Title...\" onChange={(event) => this.setState({title: event.target.value})}/>\r\n                    </Form.Group>     \r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        {/* <Form.Label>Category</Form.Label> */}\r\n                        <Form.Control as=\"select\" size=\"md\" onChange={(event) => this.setState({category: event.target.value})}>\r\n                            <option value=\"Netflix\">Netflix</option>\r\n                            <option value=\"Hollywood\">Hollywood</option>\r\n                            <option value=\"Bollywood\">Bollywood</option>\r\n                            <option value=\"Tollywood\">Tollywood</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"addFormButton\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                </div>\r\n                <i className=\"fas fa-check-circle\"></i>\r\n\r\n                <div className=\"row mt-4 d-flex justify-content-center align-items-center\">\r\n                    {this.state.cardsJSX}\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddForm;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":27,"nodeType":"59","messageId":"60","endLine":2,"endColumn":33},{"ruleId":"57","severity":1,"message":"61","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":15},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","replacedBy":"65"},{"ruleId":"57","severity":1,"message":"66","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"67","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":58,"column":41,"nodeType":"70","endLine":58,"endColumn":80},{"ruleId":"71","severity":1,"message":"72","line":60,"column":49,"nodeType":"70","endLine":60,"endColumn":96},{"ruleId":"57","severity":1,"message":"73","line":72,"column":13,"nodeType":"59","messageId":"60","endLine":72,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'classes' is defined but never used.",["74"],["75"],["74"],["75"],"'Card' is defined but never used.","'checkIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'img' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]